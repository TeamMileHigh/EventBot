import type { ClientOptions } from "@xmtp/xmtp-js";
import type { BotHandler } from "./bot.js";
export type BotConfig = {
    xmtpKeys?: Uint8Array;
    name: string;
    xmtpEnv?: "dev" | "production" | "local";
    handler: BotHandler;
    messageExpiryMs?: number;
    skipMessageRefresh?: boolean;
    clientOptions?: Partial<ClientOptions>;
};
export type BotCreateConfig = Required<Omit<BotConfig, "xmtpKeys">> & {
    xmtpKeys?: Uint8Array;
};
export declare function newBotConfig(name: string, cfg: Omit<BotConfig, "handler" | "name">, handler: BotHandler): BotCreateConfig;
export declare function applyBotDefaults(config: BotConfig): BotCreateConfig;
type DbConfig = {
    postgresConnectionString: string;
};
export type AppConfig = {
    db: DbConfig;
};
export type PartialAppConfig = {
    db?: Partial<AppConfig["db"]>;
};
export type RequiredAppConfig = {
    db: Required<AppConfig["db"]>;
};
export declare function newAppConfig(cfg: PartialAppConfig): RequiredAppConfig;
export {};
//# sourceMappingURL=config.d.ts.map