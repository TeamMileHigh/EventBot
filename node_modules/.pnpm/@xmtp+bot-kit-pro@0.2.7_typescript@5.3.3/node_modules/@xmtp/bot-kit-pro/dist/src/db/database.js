import { resolve } from "node:path";
import { fileURLToPath } from "node:url";
import { drizzle } from "drizzle-orm/postgres-js";
import { migrate } from "drizzle-orm/postgres-js/migrator";
import postgres from "postgres";
export async function buildDrizzle(dbConfig) {
    const queryClient = postgres(dbConfig.postgresConnectionString);
    return {
        db: drizzle(queryClient),
        connection: queryClient,
    };
}
// Create a database instance, but with the max number of connections set to 1
export async function buildMigrator(dbConfig) {
    const migrationClient = postgres(dbConfig.postgresConnectionString, {
        max: 1,
        onnotice: () => { },
    });
    return {
        db: drizzle(migrationClient),
        connection: migrationClient,
    };
}
export async function doMigrations(dbConfig) {
    const { connection, db } = await buildMigrator(dbConfig);
    const migrationsFolder = resolve(fileURLToPath(import.meta.url), "../../migrations");
    await migrate(db, {
        migrationsFolder,
    });
    await connection.end();
}
//# sourceMappingURL=database.js.map